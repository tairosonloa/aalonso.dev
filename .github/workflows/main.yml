name: CI/CD pipeline

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Use Node.js 12.x
        uses: actions/setup-node@master
        with:
          node-version: '12.x'

      - name: Cache Node.js modules
        uses: actions/cache@master
        with:
          path: ~/.yarn
          key: ${{ runner.OS }}-node-${{ hashFiles('**/yarn-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: yarn --frozen-lockfile --cache-folder ~/.yarn

      - name: Check types
        run: yarn typecheck

      - name: Run linters
        run: yarn lint:ts && yarn lint:css:ci

      - name: Run tests
        run: yarn test

  build:
    if: github.ref == 'refs/heads/master'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Use Node.js 12.x
        uses: actions/setup-node@master
        with:
          node-version: '12.x'

      - name: Cache Node.js modules
        uses: actions/cache@master
        with:
          path: ~/.yarn
          key: ${{ runner.OS }}-node-${{ hashFiles('**/yarn-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: yarn --frozen-lockfile --cache-folder ~/.yarn
      
      - name: Prebuild
        run: yarn prebuild
        env:
          DOMAIN: ${{ secrets.DOMAIN }}
          GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID }}
      
      - name: Build
        run: yarn build
        env:
          DOMAIN: ${{ secrets.DOMAIN }}
          GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID }}

      - name: Export
        run: yarn export
        env:
          DOMAIN: ${{ secrets.DOMAIN }}
          GA_TRACKING_ID: ${{ secrets.GA_TRACKING_ID }}

  deploy:
    if: github.ref == 'refs/heads/master'
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Deploy to netlify
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=out --prod
          secrets: '["NETLIFY_AUTH_TOKEN", "NETLIFY_SITE_ID"]'

